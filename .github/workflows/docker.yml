name: Docker
on: push
jobs:
  docker-job:
    runs-on: ubuntu-latest
    container:
      image: node:20.3-alpine3.17
      env:
        API_URL: some-url.com
      ports:
        - 80
      #   volumes:
      #     - vol_name:/path/in/container
      #     - /path/to/container
      #     - /path/in/host:/path/in/container
    #   options: --cpus 1
    steps:
      - name: Log Node & OS versions
        run: |
          node -v
          cat /etc/os-release

      - name: Log Env
        run: echo $API_URL

      - name: Create a file
        run: echo 'Some text' > text.txt

      - name: Container in a Step
        uses: docker://node:18.16-alpine3.17
        with:
          entrypoint: /usr/local/bin/node
          args: -p 2+3+2+3

      - name: Log node version
        uses: docker://node:18.16-alpine3.17
        with:
          entrypoint: /usr/local/bin/node
          args: -v

      - name: Show file contents
        uses: docker://node:18.16-alpine3.17
        with:
          entrypoint: cat
          args: text.txt

      - uses: actions/checkout@v3

      - name: Run a bash script
        uses: docker://node:18.16-alpine3.17
        with:
          entrypoint: ./scrip.sh
          args: 'Some string'

      - name: Send a slack message
        uses: docker://technosophos/slack-notify
        if: failure()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: From GitHub Actions
          SLACK_MESSAGE: 'Actor: ${{ github.actor }}, Event: ${{ github.event_name }}'
          SLACK_COLOR: '#723fc4'

      - name: Send a teams message
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          # raw: 'From Kinawy Own Laptop: Actor: ${{ github.actor }}, Event: ${{ github.event_name }}'
          raw: ${{ github.actor }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
          dry_run: True
